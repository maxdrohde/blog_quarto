{
  "hash": "f7ea350a27e467f9a3a9c085995dbed0",
  "result": {
    "markdown": "---\ntitle: What is a statistic?\ndescription: Exploring the idea of a statistic by simulating dice rolls in R\nauthor: Max Rohde\ndate: 12/08/2020\nimage: preview.png\ncode-fold: show\n---\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\n```\n:::\n\n\n## Introduction\n\nWhen we collect data from a data-generating process, we can calculate values from that data. These values are called statistics.\n\nCommon example include:\n\n- mean and median (measures of center)\n- variance and IQR (measures of spread)\n- order statistics, such as the minimum and the maximum\n\nWe can even create arbitrary statistics that appear to have little use, such as adding only the first and third elements of the data and dividing by 17.\n\n## Simulating statistics of dice rolls\n\nAs a simple data-generating process, let's consider rolling 5 dice. Each time we roll, we obtain 5 numbers, each from 1 to 6. We will call each one of these vectors of 5 numbers,\n\n$$\n(x_1, x_2, x_3, x_4, x_5)\n$$\n\na sample. We then will compute statistics from these samples. The main question we seek to answer is: how are the statistics distributed? When I calculate the mean of 5 dice, what will the most likely result be? We can ask this question about any statistic.\n\nWe'll write a function to roll `n` dice called `roll()`.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# A function to roll `n` dice\nroll <- function(n){\n  sample(x = 1:6, size=n, replace=TRUE)\n}\n```\n:::\n\n\nThen we'll use `purrr:map()` to generate 100,000 rolls of 5 dice.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Roll 5 dice 100,000 times\ndata <- map(1:1e5, ~roll(5))\n```\n:::\n\n\nHere's an example of running the function.\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Look at first three rolls\ndata[1:3]\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[[1]]\n[1] 3 1 4 2 5\n\n[[2]]\n[1] 5 3 3 1 1\n\n[[3]]\n[1] 5 3 3 3 2\n```\n:::\n:::\n\n\nFor each of these rolls, we can calculate the value of a statistic.\n\nWe'll calculate the following statistics:\n\n- median\n- mean\n- minimum\n- maximum\n- second order statistic $X_{(2)}$\n- range\n\n\n::: {.cell}\n\n```{.r .cell-code}\n# Returns the nth order statistic of the sample\norder_stat <- function(x, n){\n  x <- sort(x)\n  return(x[n])\n}\n\n# Generate various statistics for each roll\nmedians <- map_dbl(data, ~median(.x))\nmeans <- map_dbl(data, ~mean(.x))\nminimums <- map_dbl(data, ~min(.x))\nmaximums <- map_dbl(data, ~max(.x))\nsecond_order_stat <- map_dbl(data, ~order_stat(x=.x, n=2))\nranges <- maximums - minimums\n```\n:::\n\n::: {.cell}\n\n```{.r .cell-code}\n# Create a data frame from our computed statistics\ndf <- tibble(medians, means, minimums, maximums, second_order_stat, ranges)\n\n# Pivot the data into long format for plotting\ndf <- pivot_longer(df, cols = everything())\n```\n:::\n\n\nNow using the data from our simulation, we can plot the sampling distribution of the each of the statistics.\n\n\n::: {.cell}\n\n```{.r .cell-code}\ndf$name <- recode(df$name,\n  `medians` = \"Median\",\n  `means` = \"Mean\",\n  `minimums` = \"Minimum\",\n  `maximums` = \"Maximum\",\n  `second_order_stat` = \"2nd Order Statistic\",\n  `ranges` = \"Range\")\n\ndf$name <- as.factor(df$name)\ndf$name <- fct_relevel(df$name,\n                       c(\"Minimum\",\n                         \"2nd Order Statistic\",\n                         \"Maximum\",\n                         \"Range\",\n                         \"Mean\",\n                         \"Median\"))\n\ndf %>%\n  ggplot(aes(x = value)) +\n  geom_bar(aes(y = ..prop..),\n           width = 0.2, fill = \"gray\", color = \"black\") +\n  scale_x_continuous(breaks = 0:6) +\n  facet_wrap(~name, scales = \"free_x\") +\n  labs(x = \"Value\",\n       y = \"Estimated Probability\",\n       title = \"Distribution of various statistics for 100,000 rolls of 5 dice\",\n       caption = \"Monte Carlo estimate with 100,000 simulations\") +\n  ggthemes::theme_solarized() +\n  theme(text = element_text(size = 12, family = \"Source Sans Pro\"))\n```\n\n::: {.cell-output-display}\n![Distributions of statistics computed from rolls of 5 dice. Probabilities were estimated using 100,000 simulations.](index_files/figure-html/unnamed-chunk-7-1.png){width=768}\n:::\n:::\n\n\nA few things to note:\n\n- Because of averaging, the mean can take on more possible values than the other statistics. Qe can see it taking on the characteristic bell shape of the normal distribution due to the central limit theorem.\n- The median is always a whole number because we are rolling an odd number of dice.\n- Some of these distributions are tedious to work out analytically, and with more complicated data-generating processes there may be no closed form solutions.",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}